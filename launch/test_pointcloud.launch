<launch>
  <!-- Unreal/Routine arguments -->
  <arg name="sensor_model_config" default="sensor_model_config.yaml"/>
  <arg name="use_voxblox" default="true"/>
  <arg name="rviz_config_pcl" default="test_launch_config_pcl.rviz"/>
  <arg name="rviz_config_voxblox" default="test_launch_config_voxblox.rviz"/>

  <!-- Unreal vision client + sensor model -->
  <node name="unreal_ros_client" pkg="unreal_cv_ros" type="unreal_ros_client.py" output="screen">
    <rosparam param="test">true</rosparam>
  </node>
  <node name="unreal_sensor_model" pkg="unreal_cv_ros" type="sensor_model.py" output="screen">
    <rosparam command="load" file="$(find unreal_cv_ros)/cfg/$(arg sensor_model_config)"/>
  </node>

  <!-- RVIZ -->
  <node type="rviz" name="rviz_pcl" pkg="rviz" args="-d $(find unreal_cv_ros)/cfg/$(arg rviz_config_pcl)"/>
  
  <!-- static camera transform (odom to camera frame)-->
   <node pkg="tf" type="static_transform_publisher" name="tf_camera_to_link" args="0 0 0 -0.5 0.5 -0.5 0.5 /camera_link /camera 100"/>
   
  <!-- Voxblox -->
  <group if="$(arg use_voxblox)">
		<node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen" args="-alsologtostderr" clear_params="true">
		  <remap from="pointcloud" to="/ue_sensor_out"/>
		  <param name="tsdf_voxel_size" value="0.1" />
		  <param name="tsdf_voxels_per_side" value="16" />
		  <param name="publish_esdf_map" value="true" />
      <param name="publish_pointclouds" value="true" />
		  <param name="voxel_carving_enabled" value="true" />
		  <param name="color_mode" value="color" />
		  <param name="use_tf_transforms" value="true" />
		  <param name="update_mesh_every_n_sec" value="1.0" />
		  <param name="min_time_between_msgs_sec" value="0.0" />
		  <param name="method" value="fast" />
		  <param name="use_const_weight" value="false" />
		  <param name="allow_clear" value="true" />
		  <param name="verbose" value="false" />
		</node>
		<node type="rviz" name="rviz_voxblox" pkg="rviz" args="-d $(find unreal_cv_ros)/cfg/$(arg rviz_config_voxblox)"/>
	</group>
</launch>
